name: Prod ADF Deployment

on:
  workflow_dispatch:
 

permissions:
  id-token: write
  contents: read
  actions: read

env:
  DEV_SUBSCRIPTION_ID: "bcfad0a4-d4be-4e66-b003-aea579c852d3"
  DEV_RESOURCE_GROUP: "Tej_RG"
  DEV_ADF_NAME: "devasdf"
  PROD_RESOURCE_GROUP: "Tej_RG"
  PROD_ADF_NAME: "prodadfs"
  PROD_SUBSCRIPTION_ID: "bcfad0a4-d4be-4e66-b003-aea579c852d3"
  TENANT_ID: "f55b6506-a6ec-480b-b903-e4a0249336f1"

jobs:
  build:
    runs-on: adf
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 18.x
        
      - name: Install ADF Utilities package
        run: npm install
        working-directory: ${{ github.workspace }}/build 
        
      - name: Validate ADF Configuration
        run: npm run build validate ${{ github.workspace }}/ /subscriptions/${{ env.DEV_SUBSCRIPTION_ID }}/resourceGroups/${{ env.DEV_RESOURCE_GROUP }}/providers/Microsoft.DataFactory/factories/${{ env.DEV_ADF_NAME }}
        working-directory: ${{ github.workspace }}/build
  
      - name: Generate ARM Templates
        run: npm run build export ${{ github.workspace }}/ /subscriptions/${{ env.DEV_SUBSCRIPTION_ID }}/resourceGroups/${{ env.DEV_RESOURCE_GROUP }}/providers/Microsoft.DataFactory/factories/${{ env.DEV_ADF_NAME }} "ExportedArmTemplate"
        working-directory: ${{ github.workspace }}/build
  
      - name: Upload ARM Templates
        uses: actions/upload-artifact@v4
        with:
          name: ExportedArmTemplate
          path: ${{ github.workspace }}/build/ExportedArmTemplate


  release:
    needs: build
    runs-on: adf
    steps:
    

      - name: Download a Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: ExportedArmTemplate 

      - name: Login via Az module
        uses: azure/login@v1
        with:
          client-id: "9c525365-e62a-4313-a551-b87e0f4c42d5"
          # client-secret: "Yqn8Q~SOw1_Spw~kSstGMfGQ1yUEzqv5LJijkbfg"
          tenant-id: ${{ env.TENANT_ID }}
          subscription-id: ${{ env.PROD_SUBSCRIPTION_ID }}
          allow-no-subscriptions: true
        
      - name: Before Deployment Script
        shell: pwsh
        run: |
          $securePassword = ConvertTo-SecureString "Yqn8Q~SOw1_Spw~kSstGMfGQ1yUEzqv5LJijkbfg" -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential ("9c525365-e62a-4313-a551-b87e0f4c42d5", $securePassword)
          Connect-AzAccount -ServicePrincipal -Credential $credential -TenantId ${{ env.TENANT_ID }} -SubscriptionId ${{ env.PROD_SUBSCRIPTION_ID }}

    

      
      - name: Run PreDeploymentScript
        shell: pwsh
        run: |
          sudo pwsh -command ./PrePostDeploymentScript.ps1 `
            -armTemplate "./ARMTemplateForFactory.json" `
            -armTemplateParameters "./ARMTemplateParametersForFactory.json" `
            -ResourceGroupName "${{ env.PROD_RESOURCE_GROUP }}" `
            -DataFactoryName prodadfs`
            -predeployment 1 `
            -deleteDeployment 0

      - name: Deploy Azure Resource Manager (ARM) Template
        uses: Azure/arm-deploy@v1.0.6
        with:
          scope: 'resourcegroup'
          resourceGroupName: ${{ env.PROD_RESOURCE_GROUP }}
          template: ./ARMTemplateForFactory.json
          deploymentMode: Incremental
          parameters: > 
            ./ARMTemplateParametersForFactory.json
            factoryName=${{ env.PROD_ADF_NAME }}

      - name: Run PostDeploymentScript
        shell: pwsh
        run: |
          sudo pwsh -command ./PrePostDeploymentScript.ps1 `
            -armTemplate "./ARMTemplateForFactory.json" `
            -armTemplateParameters "./ARMTemplateParametersForFactory.json" `
            -ResourceGroupName "${{ env.PROD_RESOURCE_GROUP }}" `
            -DataFactoryName "${{ env.PROD_ADF_NAME }}" `
            -predeployment 0 `
            -deleteDeployment 1

