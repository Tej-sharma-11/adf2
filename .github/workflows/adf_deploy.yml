name: Prod ADF Deployment

on:
  workflow_dispatch:
 

permissions:
  id-token: write
  contents: read
  actions: read

env:
  DEV_SUBSCRIPTION_ID: ${{ vars.DEV_SUBSCRIPTION_ID }}
  DEV_RESOURCE_GROUP: ${{ vars.DEV_RESOURCE_GROUP }}
  DEV_ADF_NAME: ${{ vars.DEV_ADF_NAME }}
  PROD_RESOURCE_GROUP: ${{ vars.PROD_RESOURCE_GROUP }}
  PROD_ADF_NAME: ${{ vars.PROD_ADF_NAME }}
  PROD_SUBSCRIPTION_ID: ${{ vars.PROD_SUBSCRIPTION_ID }}
  TENANT_ID: ${{ vars.TENANT_ID }}

jobs:
  build:
    runs-on: [az, dev]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 18.x
        
      - name: Install ADF Utilities package
        run: npm install
        working-directory: ${{ github.workspace }}/build 
        
      - name: Validate ADF Configuration
        run: npm run build validate ${{ github.workspace }}/ /subscriptions/${{ env.DEV_SUBSCRIPTION_ID }}/resourceGroups/${{ env.DEV_RESOURCE_GROUP }}/providers/Microsoft.DataFactory/factories/${{ env.DEV_ADF_NAME }}
        working-directory: ${{ github.workspace }}/build
  
      - name: Generate ARM Templates
        run: npm run build export ${{ github.workspace }}/ /subscriptions/${{ env.DEV_SUBSCRIPTION_ID }}/resourceGroups/${{ env.DEV_RESOURCE_GROUP }}/providers/Microsoft.DataFactory/factories/${{ env.DEV_ADF_NAME }} "ExportedArmTemplate"
        working-directory: ${{ github.workspace }}/build
  
      - name: Upload ARM Templates
        uses: actions/upload-artifact@v4
        with:
          name: ExportedArmTemplate
          path: ${{ github.workspace }}/build/ExportedArmTemplate


  release:
    needs: build
    runs-on: [az, prod]
    steps:
    

      - name: Download a Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: ExportedArmTemplate 

      - name: Login via Az module
        uses: azure/login@v1
        with:
          auth-type: IDENTITY
          tenant-id: ${{ env.TENANT_ID }}
          subscription-id: ${{ env.PROD_SUBSCRIPTION_ID }}
        

      # - name: Run PreDeploymentScript
      #   shell: pwsh
      #   run: |
      #     sudo pwsh -Command ./PrePostDeploymentScript.ps1 `
      #       -armTemplate "./ARMTemplateForFactory.json" `
      #       -armTemplateParameters "./ARMTemplateParametersForFactory.json" `
      #       -ResourceGroupName "rg-udp-datawarehouse-prod-sea-001" `
      #       -DataFactoryName "adf-udp-datawarehouse-wcm-prod-sea-001" `
      #       -predeployment 1 `
      #       -deleteDeployment 0


      - name: Deploy Azure Resource Manager (ARM) Template
        uses: Azure/arm-deploy@v1.0.6
        with:
          # Provide the scope of the deployment. Valid values are: 'resourcegroup', 'managementgroup', 'subscription'
          scope: 'resourcegroup'
          resourceGroupName: 'rg-udp-datawarehouse-prod-sea-001'
          template: ./ARMTemplateForFactory.json
          deploymentMode: Incremental
          parameters: > 
            ./ARMTemplateParametersForFactory.json
            factoryName=adf-udp-datawarehouse-wcm-prod-sea-001

      # - name: Run Post-deployment script
      #   shell: pwsh
      #   run:  sudo pwsh -command "./PrePostDeploymentScript.ps1 -armTemplate ./ARMTemplateForFactory.json -armTemplateParameters ./ARMTemplateParametersForFactory.json -ResourceGroupName rg-udp-datawarehouse-prod-sea-001 -DataFactoryName adf-udp-datawarehouse-wcm-prod-sea-001 -predeployment 0 -deleteDeployment 0"
